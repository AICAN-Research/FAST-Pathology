name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            TARGET: ubuntu
            CMD_BUILD: "pip install antspyx &&
                       pyinstaller --noconfirm --clean --onefile main_custom_bundle.spec &&
                       mkdir -p GSI-RADS-0.1.1_Ubuntu/usr/local/bin &&
                       cp -r dist/GSI-RADS GSI-RADS-0.1.1_Ubuntu/usr/local/bin &&
                       dpkg-deb --build --root-owner-group GSI-RADS-0.1.1_Ubuntu &&
                       cp -r GSI-RADS-0.1.1_Ubuntu.deb dist/GSI-RADS-1.3-ubuntu.deb"
            OUT_FILE_NAME: FastPathology-1.0-win.deb
            ASSET_MIME: application/vnd.debian.binary-package

          # - os: windows-latest
          #   TARGET: windows
          #   CMD_BUILD: "ls"
          #   OUT_FILE_NAME: FastPathology-1.0-win.exe
          #   ASSET_MIME: application/vnd.microsoft.portable-executable
    
    steps:
    - name: Download FAST
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: "smistad/FAST"
        version: "tags/v4.1.0"
        file: "fast_ubuntu18.04_4.1.0.deb"
        target: "subdir/fast_ubuntu18.04_4.1.0.deb"
        token: ${{ secrets.GITHUB_TOKEN }}

    # - uses: actions/checkout@v2
    # - name: Install dependencies
    #   run: |
    #     ls

    # - name: Configure CMake
    #   run: |
    #     cmake ${{github.workspace}} -B ${{github.workspace}}/build `

    # - name: Build
    #   run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 4

    # - name: Package
    #   run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package -j 4
    
    # - name: Upload Windows installer
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Window installer
    #     path: ${{github.workspace}}/build/FastPathology_*.exe
    #     if-no-files-found: error

    # - name: Upload archive package
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Archive package (zip)
    #     path: ${{github.workspace}}/build/FastPathology_*.zip
    #     if-no-files-found: error